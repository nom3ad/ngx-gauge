import { SimpleChanges, Renderer, AfterViewInit, ElementRef, OnChanges, OnDestroy } from '@angular/core';
import { NgxGaugeLabel, NgxGaugeValue, NgxGaugePrepend, NgxGaugeAppend } from './gauge-directives';
export declare type NgxGaugeType = 'full' | 'arch' | 'semi';
export declare type NgxGaugeCap = 'round' | 'butt';
export declare class NgxGauge implements AfterViewInit, OnChanges, OnDestroy {
    private _elementRef;
    private _renderer;
    _canvas: ElementRef;
    _labelChild: NgxGaugeLabel;
    _prependChild: NgxGaugePrepend;
    _appendChild: NgxGaugeAppend;
    _valueDisplayChild: NgxGaugeValue;
    private _size;
    private _min;
    private _max;
    private _animate;
    private _initialized;
    private _context;
    private _animationRequestID;
    ariaLabel: string;
    ariaLabelledby: string | null;
    size: number;
    min: number;
    animate: boolean;
    max: number;
    type: NgxGaugeType;
    cap: NgxGaugeCap;
    thick: number;
    label: string;
    append: string;
    prepend: string;
    foregroundColor: string;
    backgroundColor: string;
    thresholds: Object;
    private _value;
    private _steps?;
    value: any;
    duration: number;
    constructor(_elementRef: ElementRef, _renderer: Renderer);
    ngOnChanges(changes: SimpleChanges): void;
    private _updateSize;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private _getBounds;
    private _drawShell;
    private _clear;
    private _getWidth;
    private _getHeight;
    private _getRadius;
    private _getCenter;
    private _init;
    private _destroy;
    private _setupStyles;
    private _getForegroundColorByRange;
    private _create;
    private _update;
}
